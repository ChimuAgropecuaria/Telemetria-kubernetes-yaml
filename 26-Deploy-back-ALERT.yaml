apiVersion: apps/v1
kind: Deployment
metadata:
  name: ms-back-alert
  namespace: dev
  labels:
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ms-back-alert
  template:
    metadata:
      labels:
        app: ms-back-alert
        tier: backend
    spec:
      imagePullSecrets:
        - name: cregistry-bq-secret
      containers:
        - name: ms-back-alert
        #imagen v1.0.13 ok
         #imagen v1.0.15 ok // nuevas alarmas
          #imagen v1.0.16 ok
          #imagen v1.0.18 ok
          #imagen v1.0.19 ok
          image: gcr.io/chimu-335413/back-alert:v1.0.20
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3032
          envFrom:
            - secretRef:
                  name: secret-ms-ingress
          volumeMounts:
          - mountPath: /opt/gcp
            name: service-account-credentials-volume
            readOnly: true
          # - mountPath: /opt/certs
          #   name: sslcerts
          #   readOnly: true
          resources:
            requests:
              memory: "200Mi"
              cpu: "200m"
            limits:
              memory: "300Mi"
              cpu: "400m"
            # readinessProbe:
            #   tcpSocket:
            #     port: 3032
            #   initialDelaySeconds: 60
            #   periodSeconds: 10
            # livenessProbe:
            #   tcpSocket:
            #     port: 3032
            #   initialDelaySeconds: 60
            #   periodSeconds: 20
      volumes:
      - name: service-account-credentials-volume
        secret:
          secretName: pubsub-bq-secret
          items:
          - key: pubsub-access-credentials
            path: credentials.json

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: ms-back-alert-svc
#   namespace: dev
# spec:
#   type:  ClusterIP
#   selector:
#     app: ms-back-alert
#   ports:
#   - protocol: TCP
#     port:  8080
#     targetPort:  3032
#     name: tcp-8080